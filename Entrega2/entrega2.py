import oracledb
from datetime import datetime

# Conex√£o com banco Oracle
conn = oracledb.connect(
     user='rm563145',
     password="fiap25",
     dsn='oracle.fiap.com.br:1521/ORCL'
)
cursor = conn.cursor()

# Criando as tabelas
cursor.execute("""
BEGIN
    EXECUTE IMMEDIATE '
        CREATE TABLE FAZENDA (
            id_fazenda NUMBER PRIMARY KEY,
            nome_fazenda VARCHAR2(100),
            loc_fazenda VARCHAR2(100),
            area_plantio FLOAT,
            unidade_medida_area VARCHAR2(20)
        )
    ';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -955 THEN RAISE; END IF;
END;
""")

cursor.execute("""
BEGIN
    EXECUTE IMMEDIATE '
        CREATE TABLE CULTURAS (
            id_cultura NUMBER PRIMARY KEY,
            id_fazenda NUMBER,
            nome_cultura VARCHAR2(100),
            tipo_cultura VARCHAR2(100),
            area_cultura FLOAT,
            data_plantio DATE,
            data_colheita DATE,
            status_cultura VARCHAR2(50),
            FOREIGN KEY (id_fazenda) REFERENCES FAZENDA(id_fazenda)
        )
    ';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -955 THEN RAISE; END IF;
END;
""")

cursor.execute("""
BEGIN
    EXECUTE IMMEDIATE '
        CREATE TABLE SENSOR_PH (
            id_senso_PH NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
            id_cultura NUMBER,
            PH_registrado FLOAT,
            valor_PH FLOAT,
            variacao_PH FLOAT,
            data_hora TIMESTAMP,
            status_sensor VARCHAR2(50),
            loc_sensor VARCHAR2(100),
            FOREIGN KEY (id_cultura) REFERENCES CULTURAS(id_cultura)
        )
    ';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -955 THEN RAISE; END IF;
END;
""")

conn.commit()

def inserir_sensor_ph(id_cultura, valor_PH, variacao_PH, status_sensor, loc_sensor):
    data_hora = datetime.now()
    cursor.execute("""
        INSERT INTO SENSOR_PH (
            id_cultura, PH_registrado, valor_PH, variacao_PH, data_hora, status_sensor, loc_sensor
        )
        VALUES (:1, :2, :3, :4, :5, :6, :7)
    """, (id_cultura, valor_PH, valor_PH, variacao_PH, data_hora, status_sensor, loc_sensor))
    conn.commit()

def consultar_sensores_ph():
    cursor.execute("SELECT * FROM SENSOR_PH")
    for linha in cursor.fetchall():
        print(linha)

def atualizar_ph(id_senso_PH, novo_valor_PH):
    cursor.execute("""
        UPDATE SENSOR_PH
        SET valor_PH = :1, PH_registrado = :2
        WHERE id_senso_PH = :3
    """, (novo_valor_PH, novo_valor_PH, id_senso_PH))
    conn.commit()

def remover_sensor_ph(id_senso_PH):
    cursor.execute("DELETE FROM SENSOR_PH WHERE id_senso_PH = :1", (id_senso_PH,))
    conn.commit()

cursor.close()
conn.close()

